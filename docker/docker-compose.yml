version: "3.7"
        

volumes:
  timescaledb:
# Superset
  superset_db_home:
  superset_home:
  redis:
    
# Superset Build
x-superset-build: &superset-build
  args:
    NPM_BUILD_CMD: build-dev
  context: ./incubator-superset/
  dockerfile: Dockerfile-dev
x-superset-depends-on: &superset-depends-on
  - superset_db
  - redis
x-superset-volumes: &superset-volumes
  # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
  - ./incubator-superset/docker/docker-init.sh:/app/docker-init.sh
  - ./incubator-superset/docker/pythonpath_dev:/app/pythonpath
  - ./incubator-superset/superset:/app/superset
  - ./incubator-superset/superset-frontend:/app/superset-frontend
  - superset_home:/app/superset_home

services:
# Timescale DB
  timescaledb:
    image: timescale/timescaledb:latest-pg11
    container_name: timescaledb
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - timescaledb:/var/lib/postgresql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  adminer:
    image: adminer
    container_name: adminer
    restart: unless-stopped
    environment:
      - ADMINER_DEFAULT_SERVER=timescaledb
    ports:
      - 1000:8080

  candles-loader:
    build: 
      context: ../candles_loader
    container_name: candles_loader
    restart: unless-stopped
    environment:
      - SANDBOX_TOKEN=
      - PRODUCTION_TOKEN=
      - GLOBAL_RANK_CSV_FILE_PATH=/data/companies_rank.csv
      - START_LOAD_DATE=2020-01-01T00:00:00.000Z
      - MAX_ATTEMPTS=10
      - DB_TYPE=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOSTNAME=host.docker.internal
      - DB_PORT=5432
      - DB_NAME=tinkoff
    volumes:
      - ./../data/:/data

# # Superset
#   redis:
#     image: redis:3.2
#     container_name: superset_cache
#     restart: unless-stopped
#     volumes:
#       - redis:/data

#   superset_db:
#     env_file: superset.env
#     image: postgres:10
#     container_name: superset_db
#     restart: unless-stopped
#     volumes:
#       - superset_db_home:/var/lib/postgresql/data

#   superset:
#     env_file: superset.env
#     build: *superset-build
#     container_name: superset_app
#     command: ["flask", "run", "-p", "8088", "--with-threads", "--reload", "--debugger", "--host=0.0.0.0"]
#     restart: unless-stopped
#     ports:
#       - 8088:8088
#     depends_on: *superset-depends-on
#     volumes: *superset-volumes

#   superset-init:
#     build: *superset-build
#     container_name: superset_init
#     command: ["/app/docker-init.sh"]
#     env_file: superset.env
#     depends_on: *superset-depends-on
#     volumes: *superset-volumes

#   superset-node:
#     image: node:10-jessie
#     container_name: superset_node
#     command: ["bash", "-c", "cd /app/superset-frontend && npm install --global webpack webpack-cli && npm install && npm run dev"]
#     env_file: superset.env
#     depends_on: *superset-depends-on
#     volumes: *superset-volumes

#   superset-worker:
#     build: *superset-build
#     container_name: superset_worker
#     command: ["celery", "worker", "--app=superset.tasks.celery_app:app", "-Ofair", "-l", "INFO"]
#     env_file: superset.env
#     restart: unless-stopped
#     depends_on: *superset-depends-on
#     volumes: *superset-volumes

#   superset-tests-worker:
#     build: *superset-build
#     container_name: superset_tests_worker
#     command: ["celery", "worker", "--app=superset.tasks.celery_app:app", "-Ofair", "-l", "INFO"]
#     env_file: superset.env
#     environment:
#       DATABASE_HOST: localhost
#       DATABASE_DB: test
#       REDIS_CELERY_DB: 2
#       REDIS_RESULTS_DB: 3
#       REDIS_HOST: localhost
#     depends_on: *superset-depends-on
#     volumes: *superset-volumes